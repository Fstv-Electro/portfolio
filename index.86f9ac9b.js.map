{"mappings":"kBAAAA,EAAiBC,KAAKC,MAAM,kUCC5B,IAKMC,EALAC,EAAYC,SAASC,cAAc,mBAEnCC,EAAYC,OAAOC,OAAOD,OAAOC,OAAOT,IAGxCG,EAAYI,EACbG,KAAI,SAAAC,GAEH,IAAIC,EAAaD,EAAIE,MAEjBC,EADcH,EAAII,OAEnBC,MAAM,KACNN,KAAI,SAAAO,GACH,GAAc,KAAVA,EAGJ,MAAO,0BAEAC,OADMD,EAAM,wDACNC,OAAND,EAAM,iC,IAIdE,KAAK,IACJC,EAAcR,EACfI,MAAM,KACNN,KAAI,SAAAO,GACH,GAAc,KAAVA,EAGJ,MAAO,0BAEAC,OADMD,EAAM,wDACNC,OAAND,EAAM,iC,IAIdE,KAAK,IAER,MAAkB,KAAdR,EAAIE,OAA+B,KAAfF,EAAII,OACV,kEACqBG,OAATP,EAAIU,KAAK,aAGvB,kEAE2CH,OAD7BP,EAAIU,KAAK,yEAEqBH,OADDE,EAAY,uEACEF,OAAbJ,EAAa,S,IAI1EK,KAAK,IACRf,EAAUkB,mBAAmB,YAAanB,GAE1CoB,QAAQC,IAAI,kBAAmBrB,E","sources":["src/project-list.json","src/parse-projects.js"],"sourcesContent":["[\n    {\n        \"name\": \"HTML5, CSS3\",\n        \"group\": \"https://titotrapatonni.github.io/ice-cream-code-ninjas,https://fstv-electro.github.io/donut-project\",\n        \"single\": \"\"\n        \n    },\n    {\n        \"name\": \"JavaScript\",\n        \"group\": \"\",\n        \"single\": \"\"\n    },\n    {\n        \"name\": \"React\",\n        \"group\": \"\",\n        \"single\": \"\"\n\n    },    \n    {\n        \"name\": \"Node.js\",\n        \"group\": \"\",\n        \"single\": \"\"\n\n    }, \n    {\n        \"name\":\"TypeScript\",\n        \"group\": \"\",\n        \"single\": \"\"\n    }    \n]\n\n","let Projects = require('./project-list.json');\nconst projectEl = document.querySelector('.projects__list');\n\nconst objectAll = Object.values(Object.values(Projects));\n\nfunction markupProjects() {\n  let markupAll = objectAll\n    .map(cat => {\n      //   console.log('name category', cat.name);\n      let groupValue = cat.group;\n      let singleValue = cat.single;\n      let markupSingle = singleValue\n        .split(',')\n        .map(value => {\n          if (value === '') {\n            return;\n          }\n          return `\n            <a href=\"${value}\" class=\"projects__item__link link\"\n              >${value}</a\n            >\n          `;\n        })\n        .join('');\n      let markupGroup = groupValue\n        .split(',')\n        .map(value => {\n          if (value === '') {\n            return;\n          }\n          return `\n            <a href=\"${value}\" class=\"projects__item__link link\"\n              >${value}</a\n            >\n          `;\n        })\n        .join('');\n      let markupProject;\n      if (cat.group === '' && cat.single === '') {\n        markupProject = `<li class=\"projects__item\">\n        <p class=\"projects__name\">${cat.name}</p></li>`;\n        return markupProject;\n      }\n      markupProject = `<li class=\"projects__item\">\n        <p class=\"projects__name\">${cat.name}</p>\n          <p class=\"projects__item__descr\">Group projects:</p> ${markupGroup} \n          <p class=\"projects__item__descr\">Single projects:</p> ${markupSingle} </li>`;\n      //   console.log(markupProject);\n      return markupProject;\n    })\n    .join('');\n  projectEl.insertAdjacentHTML('beforeend', markupAll);\n\n  console.log(\"IT'S all MARKUP\", markupAll);\n}\n\nmarkupProjects();\n"],"names":["$516b7e2bd443e4f4$exports","JSON","parse","markupAll","$e24c285941dc854e$var$projectEl","document","querySelector","$e24c285941dc854e$var$objectAll","Object","values","map","cat","groupValue","group","markupSingle","single","split","value","concat","join","markupGroup","name","insertAdjacentHTML","console","log"],"version":3,"file":"index.86f9ac9b.js.map"}